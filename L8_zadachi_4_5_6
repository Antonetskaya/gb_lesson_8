"""4. Начните работу над проектом «Склад оргтехники». Создайте класс, описывающий склад.
А также класс «Оргтехника», который будет базовым для классов-наследников.
Эти классы — конкретные типы оргтехники (принтер, сканер, ксерокс). В базовом классе определить параметры, общие для приведенных типов.
В классах-наследниках реализовать параметры, уникальные для каждого типа оргтехники.
5. Продолжить работу над первым заданием. Разработать методы, отвечающие за приём оргтехники на склад и передачу в определенное подразделение компании.
Для хранения данных о наименовании и количестве единиц оргтехники, а также других данных, можно использовать любую подходящую структуру, например словарь.
6. Продолжить работу над вторым заданием. Реализуйте механизм валидации вводимых пользователем данных.
Например, для указания количества принтеров, отправленных на склад, нельзя использовать строковый тип данных."""


class Orgtehnika:
    naimenovanie: str
    proizvoditel: str
    model: str
    cena: int

    def __init__(self, naimenovanie, proizvoditel, model, cena):
        self.naimenovanie = naimenovanie
        self.proizvoditel = proizvoditel
        self.model = model
        self.cena = cena


class Printer(Orgtehnika):
    sposob_pechati: str  # лазерный или струйный
    cvet_pechati: str  # ч/б или цветная печать


    def __init__(self, naimenovanie, proizvoditel, model, cena, sposob_pechati, cvet_pechati):
        super().__init__(naimenovanie, proizvoditel, model, cena)
        self.sposob_pechati = sposob_pechati
        self.cvet_pechati = cvet_pechati


class Scaner(Orgtehnika):
    tip_scanera: str
    razreshenie: str


    def __init__(self, naimenovanie, proizvoditel, model, cena, tip_scanera, razreshenie):
        super().__init__(naimenovanie, proizvoditel, model, cena)
        self.tip_scanera = tip_scanera
        self.razreshenie = razreshenie


class Xerox(Orgtehnika):
    razreshenie: str
    duplex: str  # есть /нет двустроннее копирование

    def __init__(self, naimenovanie, proizvoditel, model, cena, duplex, razreshenie):
        super().__init__(naimenovanie, proizvoditel, model, cena)
        self.duplex = duplex
        self.razreshenie = razreshenie


class Sklad:
    orgtehnika: dict
    kolichestvo: int
    # printery: dict
    # skanery: dict
    # xeroxy: dict

    def __init__(self, orgtehnika, kolichestvo=0):
        self.orgtehnika = orgtehnika
        self.kolichestvo = kolichestvo

    def postuplenie_na_sklad(self, orgtehnika: dict):
        pass


class Magazin:
    kolichestvo: int

    def __init__(self, kolichestvo=0):
        self.kolichestvo = kolichestvo

sklad = Sklad()
magazin = Magazin()

